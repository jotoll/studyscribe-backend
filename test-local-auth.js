// Script para probar la autenticaci√≥n en servidor local
const axios = require('axios');

async function testLocalAuth() {
  try {
    console.log('üîç Probando autenticaci√≥n en servidor LOCAL...');
    
    // Probar endpoint de diagn√≥stico local
    console.log('\n1. Probando endpoint de diagn√≥stico local:');
    try {
      const response = await axios.get('http://localhost:3001/api/deploy-diagnostic', {
        timeout: 5000
      });
      console.log('‚úÖ Endpoint de diagn√≥stico funcionando:');
      console.log(JSON.stringify(response.data, null, 2));
      
      if (response.data.middleware.usesRealAuth) {
        console.log('üéâ ¬°AUTENTICACI√ìN REAL ACTIVADA en local!');
      } else {
        console.log('‚ùå ¬°PROBLEMA! Autenticaci√≥n simplificada todav√≠a activa en local');
      }
    } catch (error) {
      console.log('‚ùå Servidor local no disponible:', error.message);
      console.log('üí° Ejecuta: npm run dev o node src/server.js');
    }
    
    // Probar transcripciones sin token (deber√≠a fallar)
    console.log('\n2. Probando transcripciones SIN token (deber√≠a fallar):');
    try {
      const response = await axios.get('http://localhost:3001/api/transcriptions', {
        timeout: 5000
      });
      console.log('‚ùå ¬°PROBLEMA! La petici√≥n sin token funcion√≥:', response.status);
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ ¬°CORRECTO! La petici√≥n sin token fall√≥ con 401');
      } else {
        console.log('‚ùå Error inesperado:', error.message);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

testLocalAuth();
