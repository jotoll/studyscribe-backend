// Script para probar directamente si la autenticaci√≥n est√° funcionando
const axios = require('axios');

async function testTranscriptionsAuth() {
  try {
    console.log('üîç Probando autenticaci√≥n en endpoint de transcripciones...');
    
    // Probar sin token (deber√≠a fallar con autenticaci√≥n real)
    console.log('\n1. Probando SIN token (deber√≠a fallar):');
    try {
      const responseWithoutToken = await axios.get('https://studyscribe.zingyzong.com/api/transcriptions', {
        timeout: 10000
      });
      console.log('‚ùå ¬°PROBLEMA! La petici√≥n sin token funcion√≥:', responseWithoutToken.status);
      console.log('Esto significa que la autenticaci√≥n NO est√° funcionando correctamente');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ ¬°CORRECTO! La petici√≥n sin token fall√≥ con 401 (No autorizado)');
      } else {
        console.log('‚ùå Error inesperado:', error.message);
      }
    }
    
    // Probar con token falso (deber√≠a fallar)
    console.log('\n2. Probando con token falso (deber√≠a fallar):');
    try {
      const responseWithFakeToken = await axios.get('https://studyscribe.zingyzong.com/api/transcriptions', {
        headers: {
          'Authorization': 'Bearer fake-token-123'
        },
        timeout: 10000
      });
      console.log('‚ùå ¬°PROBLEMA! La petici√≥n con token falso funcion√≥:', responseWithFakeToken.status);
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ ¬°CORRECTO! La petici√≥n con token falso fall√≥ con 401');
      } else {
        console.log('‚ùå Error inesperado:', error.message);
      }
    }
    
    console.log('\nüîç CONCLUSI√ìN:');
    console.log('Si ambas peticiones fallan con 401, la autenticaci√≥n est√° funcionando correctamente.');
    console.log('Si alguna petici√≥n funciona, hay un problema grave con la autenticaci√≥n.');
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

testTranscriptionsAuth();
